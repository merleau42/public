#include <bits/stdc++.h>
using namespace std;

int main(){
    int f[5000];
    int n;
    cin >> n;

    //수열의 일부를 하드 코딩해서 점화식의 재료로 사용
    f[0] =  0;
    f[1] = 5000;
    f[2] = 5000;
    f[3] =  1;
    f[4] = 5000;
    f[5] =  1;

    //점화식으로 An을 정의하고, 치역의 나머지 빈 칸을 채우기
    for (int i=6; i<=5000; i++) {
        f[i] = min( f[i-3]+1, f[i-5]+1 );
    }

    if (f[n]>=5000)
        cout << -1;
    else
        cout << f[n];

    return 0;
}



// DP 개념 자체는 재귀 호출이랑 무관하다
// 도미노를 통해서 치역의 나머지 빈 칸을 (배열) 채워나가기
// 이미 알고있는 결과값을 참고해서 새로운 결과값의 연산을 줄임

/*
반복문:
    분기1 ㅡ 점화식 하위 요소가 불가능하면 F(x) = 불가능
    분기2 ㅡ 점화식 일부 요소가 불가능하면 가능한 요소로 F(x)
    분기3 ㅡ 점화식 모든 요소가 가능하다면 점화식 그대로 F(x)
*/
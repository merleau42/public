#include <bits/stdc++.h>
using namespace std;
// https://www.acmicpc.net/problem/2579


// 전역 변수: 변수나 배열의 값이 자동으로 0으로 초기화
int S;
int F[305];
int P[305];


int main(){
	//입력 받기
	cin >> S; // 계단의 갯수
	

	//수열의 일부를 하드 코딩해서 점화식의 재료로 사용
	for (int i=0; i<S; i++) {
		cin >> P[i]; // 각 계단에 점수 부여
	}

	F[0]=P[0];
	F[1]=P[0]+P[1];
	F[2]=max( P[0]+P[2],  P[1]+P[2] );


	//점화식을 활용해서 배열의 나머지 빈 칸을 채우기
	for (int i=2; i<S; i++) {
		F[i] = max(F[i-3] + P[i-1] + P[i],  F[i-2] + P[i]);
	}


	cout << F[S-1];

	return 0;
}



// DP 개념 자체는 재귀 호출이랑 무관하다
// 도미노를 통해서 치역의 나머지 빈 칸을 (배열) 채워나가기
// 이미 알고있는 결과값을 참고해서 새로운 결과값의 연산을 줄임

/*
반복문:
	분기1 ㅡ 점화식 하위 요소가 불가능하면 F(x) = 불가능
	분기2 ㅡ 점화식 일부 요소가 불가능하면 가능한 요소로 F(x)
	분기3 ㅡ 점화식 모든 요소가 가능하다면 점화식 그대로 F(x)
*/



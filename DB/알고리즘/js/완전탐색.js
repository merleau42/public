//: ■■■■■■■■■■■■[ 완전탐색/백트래킹 ]■■■■■■■■■■■■■
//! 백트래킹: 성능이 중요하기 때문에 절차지향적으로 작성함.
//> 성능 문제: 구조분해할당 vs 직접할당,  [...상태, e] vs push(e)/pop
백트래킹 = (args, 상태=[], 깊이=0, 해집합=[]) => {
	if ('온전한_순서쌍을_이루었는가?') {
		'순서쌍의_성질을_알아보기_위한_지표';
		if ('순서쌍이_해를_만족하는가?') {
			가공 = '순서쌍을_어떻게_가공할_것인가?';
			해집합.push(가공);
		}
		return ;
	}

    for (e of range('다음_깊이에_해당하는_변수의_변화_구간')) {
		if ('곧바로_부정되지는_않는_미래인가?') {
			상태.push(e);
			백트래킹(args, 상태, 깊이+1, 해집합);
			상태.pop();
		}
		if ('해가_얼마나_많이_필요한가?' == 해집합.length)
			return 해집합;
	}
	
	return 해집합;
}

//: ■■■■■■■■■■■■■■■■[ 브론즈4 ]■■■■■■■■■■■■■■■■
문제:		온전성,		지표,			성립,		가공,		독립,		해의갯수;
27590,		깊이==2,	[i, j]=상태		

백트래킹 = (상태=[], 깊이=0, 해집합=[]) => {
	if (깊이 == 2) {
		[i, j] = 상태;
		if ( (B - A) + B*i == (D - C) + D*j) {
			해집합.push( (B - A) + B*i );
		}
		return ;
	}

    for (e of range(0, 5000)) {
		상태.push(e);
		백트래킹(상태, 깊이+1, 해집합);
		상태.pop();
		if (1 == 해집합.length)
			return 해집합;
	}
	
	return 해집합;
}

백트래킹().log('')
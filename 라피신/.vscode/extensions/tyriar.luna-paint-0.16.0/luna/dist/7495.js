"use strict";const a26_0x488f=["Color Table","551898JJtcFE","bitmapWidth","keys","Writing only 32, 24, 8, 4 and 1-bit bmps is supported currently","reduce","height","613427IegBnn","setUint8","buffer","342683ahAzHD","compression","webpackChunkluna","743677zgGGSZ"," color count","includes","pow","floor","from","paletteColorCount","915674NdMlbz"," bitness, falling back to 32-bit","size","Cannot write 1, 4 or 8-bit bmps without color table","data","width","colors","get","Unexpected bits per pixel ","imageSize","1qhlehf","1pyPoel","bitsPerPixel","warn","usesAlphaChannel","2854852cvFYTn","length","toBGRA","bitmapHeight","map","ceil","bitness","entries","error","mimeType","setUint32","has","all","1esyIBE","toRGBA","set","image/png","setUint16","-bit image contains alpha channel, increasing to 32-bit","Cannot write an .ico with 0 images","colorPlaneCount","headerSize","subarray","-bit image contains more colors than bits per pixel allows, increasing to 24-bit","push","854516goMpLb"," with ","table"],a26_0x4d52=function(t,e){return a26_0x488f[t-=105]},a26_0x50f425=a26_0x4d52;!function(t,e){const n=a26_0x4d52;for(;;)try{if(542009===parseInt(n(166))*-parseInt(n(143))-parseInt(n(137))+parseInt(n(121))*-parseInt(n(146))+parseInt(n(133))+-parseInt(n(149))+-parseInt(n(167))*parseInt(n(156))+parseInt(n(108)))break;t.push(t.shift())}catch(e){t.push(t.shift())}}(a26_0x488f),(self[a26_0x50f425(148)]=self.webpackChunkluna||[]).push([[7495],{9094:(t,e,n)=>{var o,i;n.d(e,{P:()=>o,V:()=>i}),(o||(o={}))[a26_0x4d52(122)]=function(t,e){let n=0;const o=4*e;for(let e=0;e<o;e+=4)n=t[e],t[e]=t[e+2],t[e+2]=n},(i||(i={}))[a26_0x4d52(110)]=function(t,e){return o.toRGBA(t,e)}},4085:(t,e,n)=>{function o(t,e){return Math[a26_0x4d52(113)](t/e)*e}n.d(e,{g:()=>o})},7495:(t,e,n)=>{n.r(e),n.d(e,{writeIco:()=>l,writeIcoEntries:()=>h,writeIcoHeader:()=>u,writeIcoImageData:()=>p});var o=n(6815),i=n(9094),r=n(4085);function a(t,e,n){const o=a26_0x4d52,i=(0,r.g)(t[o(138)]*t[o(105)],32)/8,a=new Uint8Array(e.height*i);if(0===n[o(158)])return a;let s=0,c=0,l=0;for(let r=0;r<t[o(111)];r++){const u=r*i;for(let i=0;i<t.bitmapWidth;i++){s=4*((e.height-r-1)*e[o(161)]+i);const h=e.data[s]+","+e[o(160)][s+1]+","+e[o(160)][s+2]+","+e.data[s+3];switch(t.bitsPerPixel){case 1:c=u+Math[o(153)](i/8),l=7-i%8;break;case 4:c=u+Math[o(153)](i/2),l=i%2==0?4:0;break;case 8:c=u+i;break;default:throw new Error(o(164)+t[o(105)])}a[c]|=(n[o(163)](h)||0)<<l}}return a}function s(t){const e=a26_0x4d52,n=t[e(141)](((t,n)=>t+n[e(109)]),0),o=new Uint8Array(n);let i=0;for(const n of t)o.set(n,i),i+=n[e(109)];return o}const c=[1,4,8,16,24,32];async function l(t){const e=a26_0x4d52,n=u(t[e(109)]),o=t[e(112)]((t=>p(t))),i=await Promise[e(120)](o),r=h(t,i.map((t=>t.paletteColorCount)),i[e(112)]((t=>t[e(105)])));let a=n[e(109)]+r[e(141)](((t,n)=>t+n[e(109)]),0);for(const[t,n]of r[e(115)]()){const o=new DataView(n.buffer);o[e(118)](8,i[t][e(160)][e(109)],!0),o[e(118)](12,a,!0),a+=i[t][e(160)][e(109)]}return s([n,...r,...i.map((t=>t[e(160)]))])}function u(t){const e=a26_0x4d52;if(0===t)throw new Error(e(127));const n=new Uint8Array(6),o=new DataView(n.buffer);return o[e(125)](2,1,!0),o.setUint16(4,t,!0),n}function h(t,e,n){const o=a26_0x4d52,i=[];for(let r=0;r<t[o(109)];r++){const a=t[r],s=new Uint8Array(16),c=new DataView(s.buffer);c[o(144)](0,a.width>255?0:a.width),c.setUint8(1,a.height>255?0:a[o(142)]),c.setUint8(2,e[r]||0),c.setUint8(4,1),c[o(125)](6,n[r],!0),i[o(132)](s)}return i}async function p(t){const e=a26_0x4d52;return t.mimeType&&t[e(117)]!==e(124)?function(t){const e=a26_0x4d52;let n=t.bitness<=24?function(t){const e=a26_0x4d52,n=new Map;let o=!1,i=0;for(let r=0;r<t.height;r++)for(let a=0;a<t[e(161)];a++){const s=4*(r*t.width+a);if(i=t[e(160)][s+3],0===i)continue;255!==i&&(o=!0);const c=t[e(160)][s]+","+t[e(160)][s+1]+","+t.data[s+2]+","+i;!n[e(119)](c)&&n[e(123)](c,n[e(158)])}return{colors:n,usesAlphaChannel:o}}(t):void 0;n&&(t[e(114)]<24&&n[e(162)][e(158)]>Math[e(152)](2,t.bitness)&&(console[e(106)](t[e(114)]+e(131)),t.bitness=24),n[e(107)]&&(console[e(106)](t[e(114)]+e(126)),t[e(114)]=32),t[e(114)]>=24&&(n=void 0));let o=t[e(114)];!c[e(151)](t[e(114)])&&(console[e(106)]("No support for writing icos with "+t.bitness+e(157)),o=32);const r={type:1,headerSize:40,bitmapWidth:t.width,bitmapHeight:t[e(142)],colorPlaneCount:1,bitsPerPixel:o,compression:0,imageSize:0,horizontalResolution:0,verticalResolution:0,paletteColorCount:0,importantColorCount:0},l=n?function(t,e,n){const o=a26_0x4d52;if(e[o(158)]>Math[o(152)](2,t.bitsPerPixel))throw console[o(116)](o(136),Array[o(154)](e[o(139)]())),new Error("Cannot write bmp with bits per pixel "+t.bitsPerPixel+o(134)+e[o(158)]+o(150));const i=new Uint8Array(4*e[o(158)]);for(const[t,n]of e[o(115)]()){const[e,o,r,a]=t.split(",").map((t=>parseInt(t)));i[4*n]=r,i[4*n+1]=o,i[4*n+2]=e}return o(155)in t&&(t[o(155)]=e[o(158)]),{data:i,table:e}}(r,n.colors):void 0,u=function(t,e,n){const o=a26_0x4d52;switch(t[o(105)]){case 1:case 4:case 8:if(!n)throw new Error(o(159));return a(t,e,n[o(135)]);case 24:return function(t,e){const n=a26_0x4d52,o=3*e[n(161)],i=new Uint8Array(o*e[n(142)]);let r=0;for(let a=0;a<t[n(111)];a++){const s=a*o;for(let o=0;o<t[n(138)];o++)r=4*((e[n(142)]-a-1)*e[n(161)]+o),i[s+3*o]=e[n(160)][r+2],i[s+3*o+1]=e[n(160)][r+1],i[s+3*o+2]=e[n(160)][r]}return i}(t,e);case 32:return function(t,e){const n=a26_0x4d52,o=e[n(160)].slice();i.V[n(110)](o,t.bitmapWidth*t[n(111)]);const r=new Uint8Array(o),a=4*t[n(138)];let s=0;for(let e=0;e<t.bitmapHeight;e++)s=t[n(111)]-(e+1),r[n(123)](o[n(130)](s*a,(s+1)*a),e*a);return r}(t,e);default:throw new Error(o(140))}}(r,t,l),h=a({type:1,headerSize:40,bitmapWidth:t.width,bitmapHeight:t[e(142)],colorPlaneCount:1,bitsPerPixel:1,compression:0,imageSize:0,horizontalResolution:0,verticalResolution:0,paletteColorCount:0,importantColorCount:0},t,function(t){const e=a26_0x4d52,n=new Map;for(let o=0;o<t[e(142)];o++)for(let i=0;i<t[e(161)];i++){const r=4*(o*t[e(161)]+i),a=t[e(160)][r]+","+t[e(160)][r+1]+","+t.data[r+2]+","+t[e(160)][r+3];255===t[e(160)][r+3]?n[e(123)](a,0):n.set(a,1)}return n}(t));return{data:s([(p={...r,bitmapHeight:2*t[e(142)],imageSize:u[e(109)]+h.length},function(t){const e=a26_0x4d52,n=new Uint8Array(40),o=new DataView(n[e(145)]);return o[e(118)](0,t[e(129)],!0),o[e(118)](4,t[e(138)],!0),o.setUint32(8,t[e(111)],!0),o.setUint16(12,t[e(128)],!0),o[e(125)](14,t[e(105)],!0),o[e(125)](16,t[e(147)],!0),o[e(125)](20,t[e(165)],!0),o[e(125)](24,t.horizontalResolution,!0),o[e(125)](28,t.verticalResolution,!0),o[e(125)](32,t[e(155)],!0),o.setUint16(36,t.importantColorCount,!0),n}(p)),l?l.data:new Uint8Array(0),u,h]),paletteColorCount:r[e(155)],bitsPerPixel:o};var p}(t):async function(t){const e=a26_0x4d52;return{data:(await(0,o.Vx)({data:t[e(160)],width:t[e(161)],height:t[e(142)]})).data,bitsPerPixel:32}}(t)}}}]);